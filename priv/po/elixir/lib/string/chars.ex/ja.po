msgid ""
msgstr ""
"Project-Id-Version: l 10n_elixir\n"
"POT-Creation-Date: \n"
"PO-Revision-Date: 2017-03-24 17:50+0900\n"
"Last-Translator: 小田 照敬 <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 1.8.12\n"

#. TRANSLATORS: Elixir.String.Chars Summary
#: lib/string/chars.ex:4
msgid ""
"The `String.Chars` protocol is responsible for\n"
"converting a structure to a binary (only if applicable).\n"
"The only function required to be implemented is\n"
"`to_string` which does the conversion.\n"
"\n"
"The `to_string/1` function automatically imported\n"
"by `Kernel` invokes this protocol. String\n"
"interpolation also invokes `to_string` in its\n"
"arguments. For example, `\"foo#{bar}\"` is the same\n"
"as `\"foo\" <> to_string(bar)`.\n"
msgstr ""
"String.Charsプロトコルは、何らかの構造をバイナリに変換する\n"
"（適用可能な場合のみ）役割りを果します。実装が要求される関数は\n"
"変換を行う`to_string`だけです。\n"
"\n"
"`Kernel`により自動的にインポートされる`to_string/1`関数が、\n"
"このプロトコルを実行します。文字列の式埋め込みも引数の中で\n"
"`to_string`を実行します。たとえば、`\"foo#{bar}\"`は\n"
"`\"foo\" <> to_string(bar)`と同じです。\n"
