msgid ""
msgstr ""
"Project-Id-Version: l 10n_elixir\n"
"PO-Revision-Date: 2017-03-27 12:03+0900\n"
"Last-Translator: 小田 照敬 <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"POT-Creation-Date: \n"
"X-Generator: Poedit 1.8.12\n"

#. TRANSLATORS: def Calendar.ISO.days_in_month(year, month)
#: lib/calendar/iso.ex:19
msgid ""
"Returns how many days there are in the given year-month.\n"
"\n"
"## Examples\n"
"\n"
"    iex> Calendar.ISO.days_in_month(1900, 1)\n"
"    31\n"
"    iex> Calendar.ISO.days_in_month(1900, 2)\n"
"    28\n"
"    iex> Calendar.ISO.days_in_month(2000, 2)\n"
"    29\n"
"    iex> Calendar.ISO.days_in_month(2001, 2)\n"
"    28\n"
"    iex> Calendar.ISO.days_in_month(2004, 2)\n"
"    29\n"
"    iex> Calendar.ISO.days_in_month(2004, 4)\n"
"    30\n"
"\n"
msgstr ""
"指定した年月は何日あるを返します。\n"
"\n"
"## 例\n"
"\n"
"    iex> Calendar.ISO.days_in_month(1900, 1)\n"
"    31\n"
"    iex> Calendar.ISO.days_in_month(1900, 2)\n"
"    28\n"
"    iex> Calendar.ISO.days_in_month(2000, 2)\n"
"    29\n"
"    iex> Calendar.ISO.days_in_month(2001, 2)\n"
"    28\n"
"    iex> Calendar.ISO.days_in_month(2004, 2)\n"
"    29\n"
"    iex> Calendar.ISO.days_in_month(2004, 4)\n"
"    30\n"
"\n"

#. TRANSLATORS: def Calendar.ISO.leap_year?(year)
#: lib/calendar/iso.ex:47
msgid ""
"Returns if the given year is a leap year.\n"
"\n"
"## Examples\n"
"\n"
"    iex> Calendar.ISO.leap_year?(2000)\n"
"    true\n"
"    iex> Calendar.ISO.leap_year?(2001)\n"
"    false\n"
"    iex> Calendar.ISO.leap_year?(2004)\n"
"    true\n"
"    iex> Calendar.ISO.leap_year?(1900)\n"
"    false\n"
"\n"
msgstr ""
"指定した年がうるう年か否かを返します。\n"
"\n"
"## 例\n"
"\n"
"    iex> Calendar.ISO.leap_year?(2000)\n"
"    true\n"
"    iex> Calendar.ISO.leap_year?(2001)\n"
"    false\n"
"    iex> Calendar.ISO.leap_year?(2004)\n"
"    true\n"
"    iex> Calendar.ISO.leap_year?(1900)\n"
"    false\n"
"\n"

#. TRANSLATORS: def Calendar.ISO.datetime_to_string(year, month, day, hour, minute, second, microsecond, time_zone, zone_abbr, utc_offset, std_offset)
#: lib/calendar/iso.ex:109
msgid "Convers the datetime (with time zone) into a string.\n"
msgstr "（タイムゾーン付きの）日時を文字列に変換します。\n"

#. TRANSLATORS: def Calendar.ISO.naive_datetime_to_string(year, month, day, hour, minute, second, microsecond)
#: lib/calendar/iso.ex:102
msgid "Converts the datetime (without time zone) into a string.\n"
msgstr "（タイムゾーンなしの）日時を文字列に変換します。\n"

#. TRANSLATORS: def Calendar.ISO.day_of_week(year, month, day)
#: lib/calendar/iso.ex:67
msgid ""
"Calculates the day of the week from the given `year`, `month`, and `day`.\n"
"\n"
"It is an integer from 1 to 7, where 1 is Monday and 7 is Sunday.\n"
"\n"
"## Examples\n"
"\n"
"    iex> Calendar.ISO.day_of_week(2016, 10, 31)\n"
"    1\n"
"    iex> Calendar.ISO.day_of_week(2016, 11, 01)\n"
"    2\n"
"    iex> Calendar.ISO.day_of_week(2016, 11, 02)\n"
"    3\n"
"    iex> Calendar.ISO.day_of_week(2016, 11, 03)\n"
"    4\n"
"    iex> Calendar.ISO.day_of_week(2016, 11, 04)\n"
"    5\n"
"    iex> Calendar.ISO.day_of_week(2016, 11, 05)\n"
"    6\n"
"    iex> Calendar.ISO.day_of_week(2016, 11, 06)\n"
"    7\n"
msgstr ""
"指定した`year`, `month`, `day`から曜日を算出します。\n"
"\n"
"結果は1から7の整数であり、1は月曜日、7は日曜日です。\n"
"\n"
"例\n"
"\n"
"    iex> Calendar.ISO.day_of_week(2016, 10, 31)\n"
"    1\n"
"    iex> Calendar.ISO.day_of_week(2016, 11, 01)\n"
"    2\n"
"    iex> Calendar.ISO.day_of_week(2016, 11, 02)\n"
"    3\n"
"    iex> Calendar.ISO.day_of_week(2016, 11, 03)\n"
"    4\n"
"    iex> Calendar.ISO.day_of_week(2016, 11, 04)\n"
"    5\n"
"    iex> Calendar.ISO.day_of_week(2016, 11, 05)\n"
"    6\n"
"    iex> Calendar.ISO.day_of_week(2016, 11, 06)\n"
"    7\n"

#. TRANSLATORS: Elixir.Calendar.ISO Summary
#: lib/calendar/iso.ex:2
msgid ""
"A calendar implementation that follows to ISO8601.\n"
"\n"
"This calendar implements the proleptic Gregorian calendar and\n"
"is therefore compatible with the calendar used in most countries\n"
"today. The proleptic means the Gregorian rules for leap years are\n"
"applied for all time, consequently the dates give different results\n"
"before the year 1583 from when the Gregorian calendar was adopted.\n"
msgstr ""
"ISO8601に準拠したカレンダの実装です。\n"
"\n"
"このカレンダは先発（proleptic）グレゴリオ暦を実装しているので、\n"
"今日のほとんどの国で使用されているカレンダーと互換性があります。\n"
"先発とは、閏年に対するグレゴリオ歴の規則がすべての年に適用される\n"
"ことを意味します。従って、グレゴリオ歴が採用された1583年以前では\n"
"日付は異なる結果を与えます。\n"

#. TRANSLATORS: def Calendar.ISO.date_to_string(year, month, day)
#: lib/calendar/iso.ex:95
msgid "Converts the given date into a string.\n"
msgstr "指定した日付を文字列に変換します。\n"
