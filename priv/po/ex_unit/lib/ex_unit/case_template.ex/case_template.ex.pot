#. TRANSLATORS: Elixir.ExUnit.CaseTemplate Summary
#: lib/ex_unit/case_template.ex:2 
msgid ""
"This module allows a developer to define a test case\n"
"template to be used throughout their tests. This is useful\n"
"when there are a set of functions that should be shared\n"
"between tests or a set of setup callbacks.\n"
"\n"
"By using this module, the callbacks and assertions\n"
"available for regular test cases will also be available.\n"
"\n"
"## Example\n"
"\n"
"    defmodule MyCase do\n"
"      use ExUnit.CaseTemplate\n"
"\n"
"      setup do\n"
"        IO.puts \"This will run before each test that uses this case\"\n"
"      end\n"
"    end\n"
"\n"
"    defmodule MyTest do\n"
"      use MyCase, async: true\n"
"\n"
"      test \"truth\" do\n"
"        assert true\n"
"      end\n"
"    end\n"
"\n"
msgstr ""
#. TRANSLATORS: defmacro ExUnit.CaseTemplate.using(var \\ quote() do;  _;end, list)
#: lib/ex_unit/case_template.ex:62 
msgid ""
"Allows a developer to customize the using block\n"
"when the case template is used.\n"
"\n"
"## Example\n"
"\n"
"    using do\n"
"      quote do\n"
"        alias MyApp.FunModule\n"
"      end\n"
"    end\n"
"\n"
msgstr ""
