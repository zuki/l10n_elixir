msgid ""
msgstr ""
"Project-Id-Version: l 10n_elixir\n"
"PO-Revision-Date: 2017-01-23 11:04+0900\n"
"Last-Translator: Keiji Suzuki <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. TRANSLATORS: defmacro ExUnit.CaseTemplate.using(var \\ quote() do;  _;end, list)
#: lib/ex_unit/case_template.ex:62
msgid ""
"Allows a developer to customize the using block\n"
"when the case template is used.\n"
"\n"
"## Example\n"
"\n"
"    using do\n"
"      quote do\n"
"        alias MyApp.FunModule\n"
"      end\n"
"    end\n"
"\n"
msgstr ""
"開発者がcase templateが使われる際のusingブロックを\n"
"カスタマイズできるようにします。\n"
"\n"
"## 例\n"
"\n"
"    using do\n"
"      quote do\n"
"        alias MyApp.FunModule\n"
"      end\n"
"    end\n"
"\n"

#. TRANSLATORS: Elixir.ExUnit.CaseTemplate Summary
#: lib/ex_unit/case_template.ex:2
msgid ""
"This module allows a developer to define a test case\n"
"template to be used throughout their tests. This is useful\n"
"when there are a set of functions that should be shared\n"
"between tests or a set of setup callbacks.\n"
"\n"
"By using this module, the callbacks and assertions\n"
"available for regular test cases will also be available.\n"
"\n"
"## Example\n"
"\n"
"    defmodule MyCase do\n"
"      use ExUnit.CaseTemplate\n"
"\n"
"      setup do\n"
"        IO.puts \"This will run before each test that uses this case\"\n"
"      end\n"
"    end\n"
"\n"
"    defmodule MyTest do\n"
"      use MyCase, async: true\n"
"\n"
"      test \"truth\" do\n"
"        assert true\n"
"      end\n"
"    end\n"
"\n"
msgstr ""
"このモジュールはテストを通して使われるテストケーステンプレートを\n"
"開発者が定義できるようにします。これは、テストの間で共有されるべき\n"
"関数、または、一連のセットアップコールバックがある場合に役立ちます。\n"
"\n"
"このモジュールをuseすることにより、標準的なテストケースで利用できる\n"
"コールバックとアサーションも利用可能になります。\n"
"\n"
"## 例\n"
"n\n"
"    defmodule MyCase do\n"
"      use ExUnit.CaseTemplate\n"
"\n"
"      setup do\n"
"        IO.puts \"This will run before each test that uses this case\"\n"
"      end\n"
"    end\n"
"\n"
"    defmodule MyTest do\n"
"      use MyCase, async: true\n"
"\n"
"      test \"truth\" do\n"
"        assert true\n"
"      end\n"
"    end\n"
"\n"
