msgid ""
msgstr ""
"Project-Id-Version: elixir 1.4.0\n"
"PO-Revision-Date: 2017-01-23 11:05+0900\n"
"Last-Translator: Keiji Suzuki <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. TRANSLATORS: @callback checked_out?/1
#: lib/mix/scm.ex:52
msgid ""
"This behaviour function returns a boolean if the\n"
"dependency is available.\n"
msgstr ""
"このビヘイビア関数は依存関係が利用可能化否かをブール値で\n"
"返します。\n"

#. TRANSLATORS: @callback managers/1
#: lib/mix/scm.ex:114
msgid ""
"Returns the usable managers for the dependency. This can be used\n"
"if the SCM has extra knowledge of the dependency, otherwise it\n"
"should return an empty list.\n"
msgstr ""
"依存関係に関する利用可能なマネージャを返します。これはSCMが\n"
"依存関係について追加情報を持っている場合に使用できます。そうでない\n"
"場合は、空のリストを返すべきです。\n"

#. TRANSLATORS: @callback format_lock/1
#: lib/mix/scm.ex:27
msgid ""
"Returns a string representing the SCM. This is used\n"
"when printing the dependency and not for inspection,\n"
"so the amount of information should be concise and\n"
"easy to spot.\n"
"\n"
"If nil is returned, it means no lock information is available.\n"
msgstr ""
"SCMを表す文字列を返します。これは依存関係を表示する\n"
"際に利用され、インスペクションには使用されません。\n"
"したがって、情報は簡潔で理解しやすいものである\n"
"べきです。\n"
"\n"
"nilが返された場合はロック情報が利用できないことを意味します。\n"

#. TRANSLATORS: def Mix.SCM.prepend(mod)
#: lib/mix/scm.ex:130
msgid "Prepends the given SCM module to the list of available SCMs.\n"
msgstr "指定されたSCMモジュールを利用可能なSCMリストの先頭に追加します。\n"

#. TRANSLATORS: def Mix.SCM.append(mod)
#: lib/mix/scm.ex:137
msgid "Appends the given SCM module to the list of available SCMs.\n"
msgstr "指定されたSCMモジュールを利用可能なSCMリストの末尾に追加します。\n"

#. TRANSLATORS: @callback update/1
#: lib/mix/scm.ex:70
msgid ""
"This behaviour function updates dependencies. It may be\n"
"called by `deps.get` or `deps.update`.\n"
"\n"
"In the first scenario, a lock is received in `opts` and\n"
"the repository must be updated to the lock. In the second,\n"
"no lock is given and the repository can be updated freely.\n"
"\n"
"It must return the current lock.\n"
msgstr ""
"このビヘイビア関数は依存関係を更新します。`deps.get`または\n"
"`deps.update`により呼ばれるでしょう。\n"
"\n"
"第一のシナリオは、ロックを`opts`で受取り、リポジトリはロックに\n"
"更新しなければならないものです。第２のシナリオは、ロックは与えられずに\n"
"リポジトリは自由に更新できるものです。\n"
"\n"
"現在のロックを返さなければなりません。\n"

#. TRANSLATORS: def Mix.SCM.available()
#: lib/mix/scm.ex:121
msgid ""
"Returns all available SCMs. Each SCM is tried in order\n"
"until a matching one is found.\n"
msgstr ""
"利用可能なすべてのSCMを返します。マッチするSCMが見つかるまで\n"
"各SCMが順番に試されます。\n"

#. TRANSLATORS: @callback fetchable?/0
#: lib/mix/scm.ex:9
msgid ""
"Returns a boolean if the dependency can be fetched\n"
"or it is meant to be previously available in the\n"
"filesystem.\n"
"\n"
"Local dependencies (i.e. non fetchable ones) are automatically\n"
"recompiled every time the parent project is compiled.\n"
msgstr ""
"依存関係を取ってこれるか、または、あらかじめファイル\n"
"システムから利用可能であることを意図しているかをブール値で\n"
"返します。\n"
"\n"
"ローカルの依存関係（すなわち、取り込み可能ではないもの）は\n"
"親プロジェクトがコンパイルされる度に自動的に再コンパイルされます。\n"

#. TRANSLATORS: @callback checkout/1
#: lib/mix/scm.ex:58
msgid ""
"This behaviour function checks out dependencies.\n"
"\n"
"If the dependency is locked, a lock is received in `opts`\n"
"and the repository must be check out at the lock. Otherwise,\n"
"no lock is given and the repository can be checked out\n"
"to the latest version.\n"
"\n"
"It must return the current lock.\n"
msgstr ""
"このビヘイビア関数は依存関係をチェックアウトします。\n"
"\n"
"依存関係がロックされている場合は、`opts`の一部としてロックを\n"
"受取ります。リポジトリはロックバージョンをチェックアウトしなければ\n"
"なりません。ロックが与えられなかった場合、リポジトリは最新版をチェック\n"
"アウトできます。\n"
"\n"
"現在のロックを返さなければなりません。\n"

#. TRANSLATORS: @callback equal?/2
#: lib/mix/scm.ex:107
msgid ""
"Receives two options and must return `true` if they refer to the\n"
"same repository. The options are guaranteed to belong to the\n"
"same SCM.\n"
msgstr ""
"２つのオプションを受取り、それらが同じリポジトリを参照している場合は\n"
"`true`を返さなければなりません。両オプションは同じSCMに属していることが\n"
"保証されます。\n"

#. TRANSLATORS: @callback format/1
#: lib/mix/scm.ex:19
msgid ""
"Returns a string representing the SCM. This is used\n"
"when printing the dependency and not for inspection,\n"
"so the amount of information should be concise and\n"
"easy to spot.\n"
msgstr ""
"SCMを表す文字列を返します。これは依存関係を表示する\n"
"際に利用され、インスペクションには使用されません。\n"
"したがって、情報は簡潔で理解しやすいものである\n"
"べきです。\n"

#. TRANSLATORS: Elixir.Mix.SCM Summary
#: lib/mix/scm.ex:2
msgid ""
"This module provides helper functions and defines the\n"
"behaviour required by any source code manager (SCM) used by Mix.\n"
msgstr ""
"このモジュールはヘルパー関数を提供し、Mixが使用するソースコードマネージャ\n"
"(SCM)に必要なビヘイビアを定義します。\n"

#. TRANSLATORS: @callback lock_status/1
#: lib/mix/scm.ex:82
msgid ""
"This behaviour function checks the status of the lock. In\n"
"particular, it checks if the revision stored in the lock\n"
"is the same as the repository it is currently in.\n"
"\n"
"It may return:\n"
"\n"
"  * `:mismatch` - if the lock doesn't match and we need to\n"
"    simply move to the latest lock\n"
"\n"
"  * `:outdated` - the repository options are outdated in the\n"
"    lock and we need to trigger a full update\n"
"\n"
"  * `:ok` - everything is fine\n"
"\n"
"The lock is sent via `opts[:lock]` but it may not always be\n"
"available. In such cases, if the SCM requires a lock, it must\n"
"return `:lockmismatch`, otherwise simply `:ok`.\n"
"\n"
"Note the lock may also belong to another SCM and as such, an\n"
"structural check is required. A structural mismatch should always\n"
"return `:outdated`.\n"
msgstr ""
"このビヘイビア関数はロックの状態をチェックします。特に、\n"
"ロックに格納されている版が現在いるリポジトリと同じであるか\n"
"チェックします。\n"
"\n"
"以下のいずれかを返すことができます:\n"
"\n"
" * `:mismatch` - ロックがマッチしない場合、単に最新のロックに\n"
"    移動する必要がある。\n"
"\n"
"  * `:outdated` - ロックのリポジトリオプションは失効しているので、\n"
"    完全に更新を行う必要がある\n"
"\n"
"  * `:ok` - すべてうまくいっている\n"
"\n"
"ロックは`opts[:lock]`により送られるが、常にりようできるわけでは\n"
"ありません。SCMがロックを必要とする場合は、`:lockmismatch`を返さ\n"
"なければなりません。そうでない場合は、単に`:ok`を返します。\n"
"\n"
"ロックは他のSCMに属している場合があることに注意してください。そのため、\n"
"構造的なチェックが必要です。構造的なミスマッチがある場合は常に\n"
" `:outdated`を返すべきです。\n"

#. TRANSLATORS: @callback accepts_options/2
#: lib/mix/scm.ex:37
msgid ""
"This behaviour function receives a keyword list of `opts`\n"
"and should return an updated list in case the SCM consumes\n"
"the available options. For example, when a developer specifies\n"
"a dependency:\n"
"\n"
"    {:foo, \"0.1.0\", github: \"foo/bar\"}\n"
"\n"
"Each registered SCM will be asked if they consume this dependency,\n"
"receiving `[github: \"foo/bar\"]` as argument. Since this option makes\n"
"sense for the Git SCM, it will return an update list of options\n"
"while other SCMs would simply return `nil`.\n"
msgstr ""
"このビヘイビア関数はキーワードリストの`opts`を受取り、SCMが利用可能な\n"
"オプションを消費した場合、更新されたリストを返さなければなりません。\n"
"たとえば、\n"
"開発者が次の依存関係を指定した場合、\n"
"\n"
"    {:foo, \"0.1.0\", github: \"foo/bar\"}\n"
"\n"
"登録された各SCMは`[github: \"foo/bar\"]` を引数として受取り、この依存関係を\n"
"消費するか尋ねられます。このオプションはGit SCMには意味のあるものですので\n"
"このSCMはオプションの更新リストを返すでしょう。一方、他のSCMは単に\n"
"`nil`を返します。\n"
