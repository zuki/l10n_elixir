#. TRANSLATORS: def Mix.Generator.create_file(path, contents, opts \\ [])
#: lib/mix/generator.ex:9 
msgid ""
"Creates a file with the given contents.\n"
"If the file already exists, asks for user confirmation.\n"
"\n"
"## Options\n"
"\n"
"  * `:force` - forces installation without a shell prompt.\n"
"\n"
"## Examples\n"
"\n"
"    iex> Mix.Generator.create_file \".gitignore\", \"_build\n"
"deps\n"
"\"\n"
"    * creating .gitignore\n"
"    :ok\n"
"\n"
msgstr ""
#. TRANSLATORS: defmacro Mix.Generator.embed_text(name, contents)
#: lib/mix/generator.ex:92 
msgid ""
"Embeds a text given by `contents` into the current module.\n"
"\n"
"It will define a private function with the `name` followed by\n"
"`_text` that expects no arguments.\n"
"\n"
"## Examples\n"
"\n"
"    defmodule Mix.Tasks.MyTask do\n"
"      require Mix.Generator\n"
"      Mix.Generator.embed_text(:error, \"There was an error!\")\n"
"    end\n"
"\n"
msgstr ""
#. TRANSLATORS: def Mix.Generator.create_directory(path)
#: lib/mix/generator.ex:34 
msgid ""
"Creates a directory if one does not exist yet.\n"
"\n"
"This function does nothing if the given directory already exists; in this\n"
"case, it still logs the directory creation.\n"
"\n"
"## Examples\n"
"\n"
"    iex> Mix.Generator.create_directory \"path/to/dir\"\n"
"    * creating path/to/dir\n"
"    :ok\n"
"\n"
msgstr ""
#. TRANSLATORS: defmacro Mix.Generator.embed_template(name, contents)
#: lib/mix/generator.ex:53 
msgid ""
"Embeds a template given by `contents` into the current module.\n"
"\n"
"It will define a private function with the `name` followed by\n"
"`_template` that expects assigns as arguments.\n"
"\n"
"This function must be invoked passing a keyword list.\n"
"Each key in the keyword list can be accessed in the\n"
"template using the `@` macro.\n"
"\n"
"For more information, check `EEx.SmartEngine`.\n"
"\n"
"## Examples\n"
"\n"
"    defmodule Mix.Tasks.MyTask do\n"
"      require Mix.Generator\n"
"      Mix.Generator.embed_template(:log, \"Log: <%= @log %>\")\n"
"    end\n"
"\n"
msgstr ""
#. TRANSLATORS: Elixir.Mix.Generator Summary
#: lib/mix/generator.ex:2 
msgid ""
"Conveniences for working with paths and generating content.\n"
"\n"
"All of these functions are verbose, in the sense they log\n"
"the action to be performed via `Mix.shell/0`.\n"
msgstr ""
