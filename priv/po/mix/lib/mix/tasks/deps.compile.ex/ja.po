msgid ""
msgstr ""
"Project-Id-Version: elixir 1.4.0\n"
"PO-Revision-Date: 2017-01-23 11:06+0900\n"
"Last-Translator: Keiji Suzuki <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. TRANSLATORS: Elixir.Mix.Tasks.Deps.Compile Summary
#: lib/mix/tasks/deps.compile.ex:6
msgid ""
"Compiles dependencies.\n"
"\n"
"By default, compile all dependencies. A list of dependencies\n"
"can be given compile multiple dependencies in order.\n"
"\n"
"This task attempts to detect if the project contains one of\n"
"the following files and act accordingly:\n"
"\n"
"  * `mix.exs`      - invokes `mix compile`\n"
"  * `rebar.config` - invokes `rebar compile`\n"
"  * `Makefile.win` - invokes `nmake /F Makefile.win` (only on Windows)\n"
"  * `Makefile`     - invokes `gmake` on FreeBSD and OpenBSD, invokes `make` "
"on any other OS (except on Windows)\n"
"\n"
"The compilation can be customized by passing a `compile` option\n"
"in the dependency:\n"
"\n"
"    {:some_dependency, \"0.1.0\", compile: \"command to compile\"}\n"
"\n"
"If a list of dependencies is given, Mix will attempt to compile\n"
"them as is. For example, if project `a` depends on `b`, calling\n"
"`mix deps.compile a` will compile `a` even if `b` is out of\n"
"date. This is to allow parts of the dependency tree to be\n"
"recompiled without propagating those changes upstream. To ensure\n"
"`b` is included in the compilation step, pass `--include-children`.\n"
msgstr ""
