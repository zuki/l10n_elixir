#. TRANSLATORS: def Mix.Tasks.Compile.Protocols.clean()
#: lib/mix/tasks/compile.protocols.ex:67 
msgid ""
"Cleans up consolidated protocols.\n"
msgstr ""
#. TRANSLATORS: Elixir.Mix.Tasks.Compile.Protocols Summary
#: lib/mix/tasks/compile.protocols.ex:7 
msgid ""
"Consolidates all protocols in all paths.\n"
"\n"
"This task is automatically invoked unless the project\n"
"disables the `:consolidate_protocols` option in their\n"
"configuration.\n"
"\n"
"## Consolidation\n"
"\n"
"Protocol consolidation is useful in production when no\n"
"dynamic code loading will happen, effectively optimizing\n"
"protocol dispatches by not accounting for code loading.\n"
"\n"
"This task consolidates all protocols in the code path\n"
"and outputs the new binary files to the given directory\n"
"(defaults to \"_build/MIX_ENV/consolidated\").\n"
"\n"
"In case you are manually compiling protocols or building\n"
"releases, you need to take the generated protocols into\n"
"account. This can be done with:\n"
"\n"
"    $ elixir -pa _build/MIX_ENV/consolidated -S mix run\n"
"\n"
"You can verify a protocol is consolidated by checking\n"
"its attributes:\n"
"\n"
"    $ iex -pa _build/MIX_ENV/consolidated -S mix run\n"
"    iex> Protocol.consolidated?(Enumerable)\n"
"    true\n"
"\n"
msgstr ""
