#. TRANSLATORS: Elixir.Mix.Tasks.Compile.Elixir Summary
#: lib/mix/tasks/compile.elixir.ex:7 
msgid ""
"Compiles Elixir source files.\n"
"\n"
"Elixir is smart enough to recompile only files that have changed\n"
"and their dependencies. This means if `lib/a.ex` is invoking\n"
"a function defined over `lib/b.ex`, whenever `lib/b.ex` changes,\n"
"`lib/a.ex` is also recompiled.\n"
"\n"
"Note it is important to recompile a file's dependencies as\n"
"there are often compile time dependencies between them.\n"
"\n"
"## Command line options\n"
"\n"
"  * `--force` - forces compilation regardless of modification times\n"
"  * `--docs` (`--no-docs`) - attaches (or not) documentation to compiled modules\n"
"  * `--debug-info` (`--no-debug-info`) - attaches (or not) debug info to compiled modules\n"
"  * `--ignore-module-conflict` - does not emit warnings if a module was previously defined\n"
"  * `--warnings-as-errors` - treats warnings as errors and return a non-zero exit code\n"
"  * `--long-compilation-threshold N` - sets the \"long compilation\" threshold\n"
"    (in seconds) to `N` (see the docs for `Kernel.ParallelCompiler.files/2`)\n"
"\n"
"## Configuration\n"
"\n"
"  * `:elixirc_paths` - directories to find source files.\n"
"    Defaults to `[\"lib\"]`.\n"
"\n"
"  * `:elixirc_options` - compilation options that apply\n"
"    to Elixir's compiler, they are: `:ignore_module_conflict`,\n"
"    `:docs` and `:debug_info`. By default, uses the same\n"
"    defaults as `elixirc` and they can always be overridden from\n"
"    the command line according to the options above.\n"
"\n"
msgstr ""
#. TRANSLATORS: def Mix.Tasks.Compile.Elixir.manifests()
#: lib/mix/tasks/compile.elixir.ex:68 
msgid ""
"Returns Elixir manifests.\n"
msgstr ""
