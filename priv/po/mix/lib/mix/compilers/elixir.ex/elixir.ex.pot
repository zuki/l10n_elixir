#. TRANSLATORS: def Mix.Compilers.Elixir.read_manifest(manifest, compile_path)
#: lib/mix/compilers/elixir.ex:117 
msgid ""
"Reads the manifest.\n"
msgstr ""
#. TRANSLATORS: def Mix.Compilers.Elixir.protocols_and_impls(manifest, compile_path)
#: lib/mix/compilers/elixir.ex:108 
msgid ""
"Returns protocols and implementations for the given `manifest`.\n"
msgstr ""
#. TRANSLATORS: def Mix.Compilers.Elixir.compile(manifest, srcs, dest, force, opts)
#: lib/mix/compilers/elixir.ex:18 
msgid ""
"Compiles stale Elixir files.\n"
"\n"
"It expects a `manifest` file, the source directories, the source directories to skip,\n"
"the extensions to read in sources, the destination directory, a flag to know if\n"
"compilation is being forced or not and a callback to be invoked\n"
"once (and only if) compilation starts.\n"
"\n"
"The `manifest` is written down with information including dependencies\n"
"between modules, which helps it recompile only the modules that\n"
"have changed at runtime.\n"
msgstr ""
