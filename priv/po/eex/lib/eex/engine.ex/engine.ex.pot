#. TRANSLATORS: def EEx.Engine.handle_body(quoted)
#: lib/eex/engine.ex:107 
msgid ""
"The default implementation simply returns the given expression.\n"
msgstr ""
#. TRANSLATORS: def EEx.Engine.handle_text(buffer, text)
#: lib/eex/engine.ex:114 
msgid ""
"The default implementation simply concatenates text to the buffer.\n"
msgstr ""
#. TRANSLATORS: def EEx.Engine.init(opts)
#: lib/eex/engine.ex:100 
msgid ""
"Returns an empty string as initial buffer.\n"
msgstr ""
#. TRANSLATORS: def EEx.Engine.handle_expr(buffer, binary, expr)
#: lib/eex/engine.ex:121 
msgid ""
"Implements expressions according to the markers.\n"
"\n"
"    <% Elixir expression - inline with output %>\n"
"    <%= Elixir expression - replace with result %>\n"
"\n"
"All other markers are not implemented by this engine.\n"
msgstr ""
#. TRANSLATORS: def EEx.Engine.handle_assign(arg)
#: lib/eex/engine.ex:60 
msgid ""
"Handles assigns in quoted expressions.\n"
"\n"
"A warning will be printed on missing assigns.\n"
"Future versions will raise.\n"
"\n"
"This can be added to any custom engine by invoking\n"
"`handle_assign/1` with `Macro.prewalk/2`:\n"
"\n"
"    def handle_expr(buffer, token, expr) do\n"
"      expr = Macro.prewalk(expr, &EEx.Engine.handle_assign/1)\n"
"      EEx.Engine.handle_expr(buffer, token, expr)\n"
"    end\n"
"\n"
msgstr ""
#. TRANSLATORS: Elixir.EEx.Engine Summary
#: lib/eex/engine.ex:2 
msgid ""
"Basic EEx engine that ships with Elixir.\n"
"\n"
"An engine needs to implement four functions:\n"
"\n"
"  * `init(opts)` - returns the initial buffer\n"
"\n"
"  * `handle_body(quoted)` - receives the final built quoted\n"
"    expression, should do final post-processing and return a\n"
"    quoted expression.\n"
"\n"
"  * `handle_text(buffer, text)` - it receives the buffer,\n"
"    the text and must return a new quoted expression.\n"
"\n"
"  * `handle_expr(buffer, marker, expr)` - it receives the buffer,\n"
"    the marker, the expr and must return a new quoted expression.\n"
"\n"
"    The marker is what follows exactly after `<%`. For example,\n"
"    `<% foo %>` has an empty marker, but `<%= foo %>` has `\"=\"`\n"
"    as marker. The allowed markers so far are: `\"\"` and `\"=\"`.\n"
"\n"
"    Read `handle_expr/3` below for more information about the markers\n"
"    implemented by default by this engine.\n"
"\n"
"`EEx.Engine` can be used directly if one desires to use the\n"
"default implementations for the functions above.\n"
msgstr ""
