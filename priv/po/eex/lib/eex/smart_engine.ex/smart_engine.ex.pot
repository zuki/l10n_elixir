#. TRANSLATORS: Elixir.EEx.SmartEngine Summary
#: lib/eex/smart_engine.ex:2 
msgid ""
"The default engine used by EEx.\n"
"\n"
"It includes assigns (like `@foo`) and possibly other\n"
"conveniences in the future.\n"
"\n"
"## Examples\n"
"\n"
"    iex> EEx.eval_string(\"<%= @foo %>\", assigns: [foo: 1])\n"
"    \"1\"\n"
"\n"
"In the example above, we can access the value `foo` under\n"
"the binding `assigns` using `@foo`. This is useful because\n"
"a template, after being compiled, can receive different\n"
"assigns and would not require recompilation for each\n"
"variable set.\n"
"\n"
"Assigns can also be used when compiled to a function:\n"
"\n"
"    # sample.eex\n"
"    <%= @a + @b %>\n"
"\n"
"    # sample.ex\n"
"    defmodule Sample do\n"
"      require EEx\n"
"      EEx.function_from_file :def, :sample, \"sample.eex\", [:assigns]\n"
"    end\n"
"\n"
"    # iex\n"
"    Sample.sample(a: 1, b: 2) #=> \"3\"\n"
"\n"
msgstr ""
