msgid ""
msgstr ""
"Project-Id-Version: l 10n_elixir\n"
"PO-Revision-Date: 2017-01-23 11:03+0900\n"
"Last-Translator: Keiji Suzuki <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. TRANSLATORS: def EEx.Tokenizer.tokenize(bin, line, opts \\ [])
#: lib/eex/tokenizer.ex:9
msgid ""
"Tokenizes the given charlist or binary.\n"
"\n"
"It returns {:ok, list} with the following tokens:\n"
"\n"
"  * `{:text, content}`\n"
"  * `{:expr, line, marker, content}`\n"
"  * `{:start_expr, line, marker, content}`\n"
"  * `{:middle_expr, line, marker, content}`\n"
"  * `{:end_expr, line, marker, content}`\n"
"\n"
"Or `{:error, line, error}` in case of errors.\n"
msgstr ""
"与えられた文字リストまたはバイナリをトークン化します。\n"
"\n"
"次のトークンを持つ {:ok, list} を返します:\n"
"\n"
"  * `{:text, content}`\n"
"  * `{:expr, line, marker, content}`\n"
"  * `{:start_expr, line, marker, content}`\n"
"  * `{:middle_expr, line, marker, content}`\n"
"  * `{:end_expr, line, marker, content}`\n"
"\n"
"エラーの場合は `{:error, line, error}` を返します。\n"
